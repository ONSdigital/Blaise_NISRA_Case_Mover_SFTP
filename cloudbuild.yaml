steps:
- id: 'Build initial image'
  name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'eu.gcr.io/$PROJECT_ID/blaise-nisra-case-mover-sftp:${SHORT_SHA}', '.' ]

# run the unit tests in the image
- id: 'Image Unit Tests'
  name: 'gcr.io/cloud-builders/docker'
  args:
    - 'run'
    - '--entrypoint=sh'
    - 'eu.gcr.io/$PROJECT_ID/blaise-nisra-case-mover-sftp:${SHORT_SHA}'
    - '-c'
    - |
        cd /deploy
        pytest --collect-only
        pytest --verbose
        RETVAL=$?
        if [ $${RETVAL} -ne 0 ]; then
          echo "tests failed"
          exit 1
        else
          echo "tests passed"
          exit 0
        fi

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push to gcr
  args:
  - 'push'
  - 'eu.gcr.io/$PROJECT_ID/blaise-nisra-case-mover-sftp:${SHORT_SHA}'

- name: 'gcr.io/cloud-builders/gsutil'
  id: Copy key for decryption
  args: ['cp', 'gs://ons-blaise-${_ENV}-git-ssh-key/*' , '.']

# SSH key needed to allow gcloud to push changes (SHORT_SHA) to other repositories
- name: 'gcr.io/cloud-builders/gcloud'
  id: Decrypt ssh key
  args:
    - kms
    - decrypt
    - --ciphertext-file=id_rsa.enc
    - --plaintext-file=/root/.ssh/id_rsa
    - --location=europe-west2
    - --keyring=git-keyring
    - --key=github-key
  volumes:
    - name: 'ssh'
      path: /root/.ssh

# Set up git with key and domain
- name: 'gcr.io/cloud-builders/gcloud'
  id: Add github to known hosts
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      chmod 600 /root/.ssh/id_rsa
      cat <<EOF >/root/.ssh/config
      Hostname github.com
      IdentityFile /root/.ssh/id_rsa
      EOF
      mv known_hosts /root/.ssh/known_hosts
  volumes:
    - name: 'ssh'
      path: /root/.ssh

# Connect to the repository
- name: 'gcr.io/cloud-builders/git'
  id: Clone k8s repository
  args:
    - clone
    - git@github.com:ONSdigital/blaise-nisra-case-mover-sftp-k8s.git
  volumes:
    - name: 'ssh'
      path: /root/.ssh

# This step clones the blaise-nisra-case-mover-sftp-k8s repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Configure user
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    cd blaise-nisra-case-mover-sftp-k8s && \
    git checkout candidate && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
    git config --list
# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" bncm-cronjob.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > blaise-nisra-case-mover-sftp-k8s/bncm-cronjob.yaml
# This step pushes the manifest back to blaise-nisra-case-mover-sftp-k8s
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd blaise-nisra-case-mover-sftp-k8s && \
    git add bncm-cronjob.yaml && \
    git commit -m "Deploying image gcr.io/${PROJECT_ID}/blaise-nisra-case-mover-sftp:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository blaise-nisra-case-mover-sftp
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git remote -v && \
    git push origin candidate
  volumes:
    - name: 'ssh'
      path: /root/.ssh
images: ['eu.gcr.io/$PROJECT_ID/blaise-nisra-case-mover-sftp:${SHORT_SHA}']
